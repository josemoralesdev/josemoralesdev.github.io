{"version":3,"file":"component---src-templates-project-template-js-fb7009ca3821fab080ef.js","mappings":"oMAIMA,EAAeC,EAAAA,QAAAA,OAAAA,WAAH,gEAAGA,CAAH,qaAEI,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,GAAGC,WAC/B,SAAAJ,GAAK,OACvBA,EAAMI,QAAUJ,EAAMC,MAAMC,OAAOC,GAAGC,QAAUJ,EAAMC,MAAMC,OAAOG,GAAGD,WAWzC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMK,QAAQC,2BAAkC,SAAAP,GAAK,OAAIA,EAAMC,MAAMK,QAAQC,2BAErG,SAAAP,GAAK,OACzBA,EAAMI,UAAWI,EAAAA,EAAAA,IAAQ,IAAD,GAAUR,EAAMC,MAAMC,OAAOC,GAAGC,YAGpC,SAAAJ,GAAK,OACzBA,EAAMI,UAAWK,EAAAA,EAAAA,IAAO,IAAD,GAAUT,EAAMC,MAAMC,OAAOC,GAAGC,YAG9C,SAAAJ,GAAK,OACdA,EAAMI,QAAU,QAAUJ,EAAMC,MAAMC,OAAOQ,KAAKC,UAC9B,qBAAGV,MAAkBK,QAAQC,2BAEzC,SAAAP,GAAK,OAAIA,EAAMY,QAAU,UACxB,SAAAZ,GAAK,OAAIA,EAAMY,QAAU,WAGvB,SAASC,EAAT,GAKX,IAJFH,EAIC,EAJDA,KACAI,EAGC,EAHDA,KAGC,IAFDC,WAAAA,OAEC,MAFY,KAEZ,MADDC,WAAAA,OACC,SACKC,EAAqB,YAATH,EACZF,EAASG,EACf,OACE,gCACE,gBAACjB,EAAD,CAAcM,QAASa,EAAWL,OAAQA,EAAQM,SAAUF,GAC1D,4BAAON,O,wEC7CFS,EAAUpB,EAAAA,QAAAA,QAAAA,WAAH,4DAAGA,CAAH,oLAIL,SAAAC,GAAK,OAAIA,EAAMC,MAAMK,QAAQc,WAEjCC,EAAAA,EAAAA,OAGAA,EAAAA,EAAAA,W,6HCLLC,EAAWvB,EAAAA,QAAAA,IAAAA,WAAH,oEAAGA,CAAH,2YAGD,qBAAGE,MAAkBC,OAAOQ,KAAKC,UACtB,qBAAGV,MAAkBK,QAAQC,2BAKxC,qBAAGN,MAAkBC,OAAOQ,KAAKC,UACtB,qBAAGV,MAAkBK,QAAQC,2BAKxC,qBAAGN,MAAkBC,OAAOQ,KAAKC,UACtB,qBAAGV,MAAkBK,QAAQC,2BAOxC,qBAAGN,MAAkBC,OAAOQ,KAAKa,QACtB,qBAAGtB,MAAkBK,QAAQC,2BAKxC,qBAAGN,MAAkBC,OAAOQ,KAAKa,QACtB,qBAAGtB,MAAkBK,QAAQC,2BAU/CiB,EAAczB,EAAAA,QAAAA,MAAAA,WAAH,uEAAGA,CAAH,uEAGN,qBAAGE,MAAkBC,OAAOQ,KAAKC,UACtB,qBAAGV,MAAkBK,QAAQC,2BAGpC,SAASkB,EAAT,GAA6B,IAClCC,EADiC,EAARC,KACzBD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACbC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAUd,OACE,gCACE,gBAAC,IAAD,CAAKA,MAAOA,IACZ,gBAAC,IAAD,KACE,gBAACT,EAAD,KACE,uBAAKU,wBAAyB,CAAEC,OAAQJ,MAE1C,gBAACL,EAAD,KAfa,SAACM,GAClB,IAAMI,EAAa,IAAIC,KAAKL,GAI5B,OAHYI,EAAWE,WAGvB,IAFWF,EAAWG,cAYJC,CAAWR,IACzB,gBAAC,EAAAS,KAAD,CAAMC,GAAG,cACP,gBAAC,IAAD,CAAQ9B,KAAK,UAAUI,KAAK,UAAUC,WAAW","sources":["webpack://gatsby-starter-default/./src/common/button/index.jsx","webpack://gatsby-starter-default/./src/common/styles/section.jsx","webpack://gatsby-starter-default/./src/templates/projectTemplate.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { darken, lighten } from \"polished\"\n\nconst ButtonStyled = styled.button`\n  box-sizing: border-box;\n  border: 1px solid ${props => props.theme.colors.ui.primary};\n  background-color: ${props =>\n    props.primary ? props.theme.colors.ui.primary : props.theme.colors.bg.primary};\n  border-radius: 4px;\n  font-family: var(--font-family);\n  font-size: 1em;\n  height: 3.57em;\n  line-height: 1.14em;\n  min-width: 8.57em;\n  padding: 1.14em;\n  cursor: pointer;\n  text-align: center;\n  text-transform: uppercase;\n  transition: background-color ${props => props.theme.globals.themeTransitionDuration}, color ${props => props.theme.globals.themeTransitionDuration};\n  &:disabled {\n    background-color: ${props =>\n    props.primary && lighten(0.15, `${props.theme.colors.ui.primary}`)};\n  }\n  &:hover {\n    background-color: ${props =>\n    props.primary && darken(0.15, `${props.theme.colors.ui.primary}`)};\n  }\n  span {\n    color: ${props =>\n    props.primary ? \"white\" : props.theme.colors.text.accent};\n    transition: color ${({ theme }) => theme.globals.themeTransitionDuration};\n  }\n  margin: ${props => props.center && \"auto\"};\n  display: ${props => props.center && \"block\"};\n`\n\nexport default function Button({\n  text,\n  type,\n  isCentered = null,\n  isDisabled = false,\n}) {\n  const isPrimary = type === \"primary\"\n  const center = isCentered\n  return (\n    <>\n      <ButtonStyled primary={isPrimary} center={center} disabled={isDisabled}>\n        <span>{text}</span>\n      </ButtonStyled>\n    </>\n  )\n}\n","import styled from \"styled-components\"\nimport { devices } from \"../../theme/breakpoints\"\n\nexport const Section = styled.section`\n  font-family: \"Roboto\", sans-serif;\n  font-variant: all-small-caps;\n  margin: 0 auto 5.769em;\n  max-width: ${props => props.theme.globals.maxWidth};\n  padding: 5.769em 16px;\n  @media ${devices.tablet} {\n    padding: 95px 2rem;\n  }\n  @media ${devices.desktopL} {\n    padding: 95px 0;\n  }\n`\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Seo from \"../components/seo\";\nimport Button from \"../common/button\";\nimport { Section } from \"../common/styles/section\"\nimport styled from \"styled-components\"\n\nconst Markdown = styled.div`\n  h1{\n    margin: revert;\n    color: ${({ theme }) => theme.colors.text.accent};\n    transition: color ${({ theme }) => theme.globals.themeTransitionDuration};\n  }\n  h2{\n    margin: revert;\n    margin-top: 1.5em;\n    color: ${({ theme }) => theme.colors.text.accent};\n    transition: color ${({ theme }) => theme.globals.themeTransitionDuration};\n  }\n  h3{\n    margin: revert;\n    margin-top: 1.5em;\n    color: ${({ theme }) => theme.colors.text.accent};\n    transition: color ${({ theme }) => theme.globals.themeTransitionDuration};\n  }\n  img{\n  }\n  p{\n    font-size: 1.35em;\n    line-height: 1.75;\n    color: ${({ theme }) => theme.colors.text.body};\n    transition: color ${({ theme }) => theme.globals.themeTransitionDuration};\n  }\n  li{\n    font-size: 1.2em;\n    line-height: 1.5;\n    color: ${({ theme }) => theme.colors.text.body};\n    transition: color ${({ theme }) => theme.globals.themeTransitionDuration};\n  }\n  a{\n    color: var(--anchor-color);\n  }\n  a:visited{\n    color: var(--anchor-visited);\n  }\n`;\n\nconst DateCreated = styled.small`\n  font-style: italic;\n  font-size: 1.2em;\n  color: ${({ theme }) => theme.colors.text.accent};\n  transition: color ${({ theme }) => theme.globals.themeTransitionDuration};\n`;\n\nexport default function Template({ data }) {\n  const { markdownRemark } = data;\n  const { frontmatter, html } = markdownRemark;\n  const { date, title } = frontmatter;\n\n  const formatDate = (date) => {\n    const dateString = new Date(date);\n    let month = dateString.getMonth();\n    let year = dateString.getFullYear();\n\n    return `${month}/${year}`\n  }\n\n  return (\n    <>\n      <Seo title={title} />\n      <Section>\n        <Markdown>\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </Markdown>\n        <DateCreated>{formatDate(date)}</DateCreated>\n        <Link to=\"/#projects\">\n          <Button text=\"Go back\" type=\"primary\" isCentered=\"yes\" />\n        </Link>\n      </Section>\n    </>\n  )\n\n\n}\n\nexport const pageQuery = graphql`\nquery ($path: String!) {\n  markdownRemark(frontmatter: {path: {eq: $path}}) {\n    html\n    frontmatter {\n      author\n      date\n      title\n      path\n      image {\n        childImageSharp {\n          fluid(maxWidth: 500, srcSetBreakpoints: [250, 350, 450, 500]) {\n            ...GatsbyImageSharpFluid\n            ...GatsbyImageSharpFluidLimitPresentationSize\n          }\n        }\n      }\n    }\n  }\n}\n`;\n"],"names":["ButtonStyled","styled","props","theme","colors","ui","primary","bg","globals","themeTransitionDuration","lighten","darken","text","accent","center","Button","type","isCentered","isDisabled","isPrimary","disabled","Section","maxWidth","devices","Markdown","body","DateCreated","Template","markdownRemark","data","frontmatter","html","date","title","dangerouslySetInnerHTML","__html","dateString","Date","getMonth","getFullYear","formatDate","Link","to"],"sourceRoot":""}