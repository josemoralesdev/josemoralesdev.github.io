{"version":3,"sources":["webpack:///./src/templates/projectTemplate.js"],"names":["Markdown","styled","div","props","theme","colors","text","secondary","DateCreated","small","Template","markdownRemark","data","frontmatter","html","date","author","title","dangerouslySetInnerHTML","__html","dateString","Date","getMonth","getFullYear","formatDate","to","type","isCentered"],"mappings":"2FAAA,4JASMA,EAAWC,IAAOC,IAAV,+EAAGD,CAAH,2JAaD,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAAKC,aAKjC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAAKC,aAGxCC,EAAcP,IAAOQ,MAAV,kFAAGR,CAAH,wCAKF,SAASS,EAAT,GAA6B,IAClCC,EADiC,EAARC,KACzBD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACLC,GAAgBF,EAAxBG,OAAwBH,EAAhBE,MAAME,EAAUJ,EAAVI,MAStB,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,MAAOA,IACZ,kBAAC,IAAD,KACE,kBAACjB,EAAD,KACE,yBAAKkB,wBAAyB,CAAEC,OAAQL,MAE1C,kBAACN,EAAD,KAhBW,SAACO,GAClB,IAAMK,EAAa,IAAIC,KAAKN,GAI5B,OAHYK,EAAWE,WAGvB,IAFWF,EAAWG,cAaFC,CAAWT,IACzB,kBAAC,OAAD,CAAMU,GAAG,cACP,kBAAC,IAAD,CAAQnB,KAAK,UAAUoB,KAAK,UAAUC,WAAW","file":"component---src-templates-project-template-js-0d29671adb4f700147ac.js","sourcesContent":["import React from \"react\";\nimport { Layout } from \"../components/layout\";\nimport { graphql, Link } from \"gatsby\";\nimport SEO from \"../components/seo\";\nimport Button from \"../common/button\";\nimport { GlobalStyle } from \"../theme/globalStyles\"\nimport { Section } from \"../common/styles/section\"\nimport styled from \"styled-components\"\n\nconst Markdown = styled.div`\n  h1{\n    margin: revert;\n  }\n  h2{\n    margin: revert;\n    margin-top: 1.5em;\n  }\n  img{\n  }\n  p{\n    font-size: 1.35em;\n    line-height: 1.75;\n    color: ${props => props.theme.colors.text.secondary}\n  }\n  li{\n    font-size: 1.2em;\n    line-height: 1.5;\n    color: ${props => props.theme.colors.text.secondary}\n  }\n`;\nconst DateCreated = styled.small`\n  font-style: italic;\n  font-size: 1.2em;\n`;\n\nexport default function Template({ data }) {\n  const { markdownRemark } = data;\n  const { frontmatter, html } = markdownRemark;\n  const { author, date, title } = frontmatter;\n\n  const formatDate = (date) => {\n    const dateString = new Date(date);\n    let month = dateString.getMonth();\n    let year = dateString.getFullYear();\n\n    return `${month}/${year}`\n  }\n  return (\n    <>\n      <GlobalStyle />\n      <Layout>\n        <SEO title={title} />\n        <Section>\n          <Markdown>\n            <div dangerouslySetInnerHTML={{ __html: html }} />\n          </Markdown>\n          <DateCreated>{formatDate(date)}</DateCreated>\n          <Link to=\"/#projects\">\n            <Button text=\"Go back\" type=\"primary\" isCentered=\"yes\" />\n          </Link>\n        </Section>\n      </Layout>\n    </>\n  )\n\n\n}\n\nexport const pageQuery = graphql`\nquery ($path: String!) {\n  markdownRemark(frontmatter: {path: {eq: $path}}) {\n    html\n    frontmatter {\n      author\n      date\n      title\n      path\n      image {\n        childImageSharp {\n          fluid(maxWidth: 500, srcSetBreakpoints: [250, 350, 450, 500]) {\n            ...GatsbyImageSharpFluid\n            ...GatsbyImageSharpFluidLimitPresentationSize\n          }\n        }\n      }\n    }\n  }\n}\n`;"],"sourceRoot":""}